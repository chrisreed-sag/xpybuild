<?xml version="1.0" standalone="yes"?>

<pysysproject>

	<requires-pysys>1.4.0</requires-pysys>
	<requires-python>2.7.13</requires-python>
	
	<property root="testRootDir"/>
	<property environment="env"/>
	<property osfamily="osfamily"/>

	
	<property name="XPYBUILD_ROOT" value="${env.XPYBUILD_ROOT}" default="${testRootDir}/.."/>
	<property name="XPYBUILD" value="${XPYBUILD_ROOT}/xpybuild.py" />

	<!-- 
	Controls whether tests will abort as a fail as soon as an assert, process, or wait operation
	completes with errors. The default value as specified below will be used when the abortOnError 
	parameter to the function is not specified. 
	-->
	<property name="defaultAbortOnError" value="true"/>	
	<property name="defaultIgnoreExitStatus" value="false"/>
	<property name="defaultEnvironsTempDir" value="self.output"/>

	<!--<property file="${osfamily}.properties" /> -->

	<!-- Custom test framework extensions, if needed -->
	<path value="./test_framework" relative="true" />

	<!-- 
	Use a custom maker class for constructing new testcases. Custom maker classes can extend from the 
	ConsoleMakeTestHelper class in order to create templated run.py scripts e.g. when a test module has
	a repeatable pattern for running or validating etc. 
	
	<maker classname="MyMaker" module="com.company.test"/>
	-->


	<writers>
		<writer classname="TravisCIWriter" module="pysys.writer.ci"></writer>
		<writer classname="JUnitXMLResultsWriter" module="pysys.writer">
			<property name="outputDir" value="${testRootDir}/pysys-junit-report"/>
		</writer>

		<writer classname="ConsoleSummaryResultsWriter" module="pysys.writer">
			<property name="showOutputDir" value="true"/>
			<property name="showOutcomeReason" value="true"/>
		</writer>
	</writers>

	<default-file-encodings>
		<default-file-encoding pattern="run.log" encoding="utf-8"/>
		
		<default-file-encoding pattern="*.xml"  encoding="utf-8"/>
		<default-file-encoding pattern="*.json" encoding="utf-8"/>
		<default-file-encoding pattern="*.yaml" encoding="utf-8"/>
	</default-file-encodings>	
	
	<formatters>
		<formatter classname="ColorLogFormatter" module="pysys.utils.logutils" 
			name="stdout" messagefmt="%(asctime)s %(levelname)-5s %(message)s" datefmt="%H:%M:%S">
		</formatter>
		
		<formatter classname="BaseLogFormatter" module="pysys.utils.logutils" 
			name="runlog" messagefmt="%(asctime)s %(levelname)-5s %(message)s" datefmt=""/>
	</formatters>

	<performance-reporter classname="xpybuild.customperfreporter.XpybuildPerfReporter"/>
	
</pysysproject>
